#!/bin/bash
# PhazaSoft iptables rules
# Специально для пользователей SteelLinux
# http://steellinux.do.am

### BEGIN INIT INFO
# Provides: iptables_myrules
# Required-Start: $network
# Should-Start: $network
# Required-Stop:
# Should-Stop:
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Short-Description: iptables user's rules
# Description: iptables user's rules
### END INIT INFO


########### НАСТРОЙКИ ########### ###>>>

# названия интерфейсов, которые будем защищать (через пробел)
PROTECTZONE="dsl0"
# названия интерфейсов, где защита не нужна (через пробел)
FREEZONE="lo eth0"

# перечень портов в кавычках через запятые пробелов, которые нужно разрешить (отдельно TCP и UDP)
TCP_PORTS="80,411,1209"
UDP_PORTS=""
# перечень портов только для разрешённых диапазонов
TCP_PORTS_PRIV=""
UDP_PORTS_PRIV=""
# разрешённые диапазоны для портов в TCP_PORTS_PRIV и UDP_PORTS_PRIV (если они заданы)
PRIV_RANGES="
0.0.0.0-0.0.0.0
127.0.0.0-127.255.255.255
192.168.0.0-192.168.255.255
172.20.0.0-172.20.255.255
"

# активировать правило connlimit для одновременных активных соединений с одного айпи? Указывается число соединений или 0-выключено.
IS_CONNLIMIT="10"	# 0-выкл
CONNLIMIT_MASK="32"	# маска для подсетей адресов одновременных активных соединений (32 - каждый IP индивидуален)

# правило ограничения количества соединений за заданное время с помощью recent
IS_RECENT="1"		# 1-вкл, 0-выкл
RECENT_SECONDS="60"	# период, за который не должно быть превышения количества соединений (в секундах)
RECENT_HITCOUNT="12"	# количество соединений за заданный период времени

# настройка ограничений количества соединений с помощью hashlimit
HASHLIMIT_UPTO="12/min"	# количество соединений в единицу времени
HASHLIMIT_BURST="6"	# пик количества разовой доставки соединений
HASHLIMIT_MODE="srcip"	# режим хеширования
HASHLIMIT_EXPIRE="60000"	# время жизни записи в хэш-таблице (в миллисекундах)

# разрешить GRE протокол (например, для VPN)
IS_GRE="1"		# 0-выкл

# udp broadcast трафик (в том чиcле IP-TV и прочее)
IS_BROADCAST="0"		# 1-вкл, 0-выкл

# icmp echo пакеты (пинги)
IS_ICMP_ECHO="0"		# 1-вкл, 0-выкл

# чёрный список IP-адресов, которые будут блокироваться
BLACKLIST_IP="
89.222.164.212
213.88.49.71
"

# чёрный список диапазонов IP-адресов, которые будут блокироваться
BLACKLIST_RANGES="
72.36.64.0-72.36.127.255
130.126.0.0-130.126.255.255
192.17.0.0-192.17.255.255
"

# чёрный список кодов стран, которые будут блокироваться (модуль geoip)
BLACKLIST_COUNTRIES="CN,KR,JP" # через запятую без пробелов

IPT=/usr/sbin/iptables	# путь к iptables

################################# ###<<<
_VERSION="1.1"


#преобразуем список портов в секции, не превышающие 15 портов на секцию (ограничение в multiport)
TCP_PORTS=$(echo "$TCP_PORTS" | sed -E 's/\s//g')
TCP_PORTS_PARSED=""
while [ $(echo $TCP_PORTS | sed -E 's/,/ /g' | wc -w) -gt "15" ]
do
  TCP_PORTS_PARSED="$TCP_PORTS_PARSED $(echo $TCP_PORTS | sed -E 's/([0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*),.*/\1/')"
  TCP_PORTS=$(echo $TCP_PORTS | sed -E 's/[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,(.*)/\1/')
done
TCP_PORTS_PARSED="$TCP_PORTS_PARSED $TCP_PORTS"

UDP_PORTS=$(echo "$UDP_PORTS" | sed -E 's/\s//g')
UDP_PORTS_PARSED=""
while [ $(echo $UDP_PORTS | sed -E 's/,/ /g' | wc -w) -gt "15" ]
do
  UDP_PORTS_PARSED="$UDP_PORTS_PARSED $(echo $UDP_PORTS | sed -E 's/([0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*),.*/\1/')"
  UDP_PORTS=$(echo $UDP_PORTS | sed -E 's/[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,(.*)/\1/')
done
UDP_PORTS_PARSED="$UDP_PORTS_PARSED $UDP_PORTS"

TCP_PORTS_PRIV=$(echo "$TCP_PORTS_PRIV" | sed -E 's/\s//g')
TCP_PORTS_PRIV_PARSED=""
while [ $(echo $TCP_PORTS_PRIV | sed -E 's/,/ /g' | wc -w) -gt "15" ]
do
  TCP_PORTS_PRIV_PARSED="$TCP_PORTS_PRIV_PARSED $(echo $TCP_PORTS_PRIV | sed -E 's/([0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*),.*/\1/')"
  TCP_PORTS_PRIV=$(echo $TCP_PORTS_PRIV | sed -E 's/[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,(.*)/\1/')
done
TCP_PORTS_PRIV_PARSED="$TCP_PORTS_PRIV_PARSED $TCP_PORTS_PRIV"

UDP_PORTS_PRIV=$(echo "$UDP_PORTS_PRIV" | sed -E 's/\s//g')
UDP_PORTS_PRIV_PARSED=""
while [ $(echo $UDP_PORTS_PRIV | sed -E 's/,/ /g' | wc -w) -gt "15" ]
do
  UDP_PORTS_PRIV_PARSED="$UDP_PORTS_PRIV_PARSED $(echo $UDP_PORTS_PRIV | sed -E 's/([0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*),.*/\1/')"
  UDP_PORTS_PRIV=$(echo $UDP_PORTS_PRIV | sed -E 's/[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,[0-9]*,(.*)/\1/')
done
UDP_PORTS_PRIV_PARSED="$UDP_PORTS_PRIV_PARSED $UDP_PORTS_PRIV"


do_rules() {
  echo 1 > /proc/sys/net/ipv4/ip_forward
  echo 0 > /proc/sys/net/ipv4/ip_forward   #если наш компьютер не используется как шлюз
  for i in /proc/sys/net/ipv4/conf/*/send_redirects; do echo 0 > $i; done   #если наш компьютер не используется как маршрутизатор
  for i in /proc/sys/net/ipv4/conf/*/rp_filter; do echo 1 > $i; done
  echo 1 > /proc/sys/net/ipv4/tcp_syncookies
  echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
  for i in /proc/sys/net/ipv4/conf/*/accept_redirects; do echo 0 > $i; done
  for i in /proc/sys/net/ipv4/conf/*/accept_source_route; do echo 0 > $i; done
  for i in /proc/sys/net/ipv4/conf/*/mc_forwarding; do echo 0 > $i; done
  for i in /proc/sys/net/ipv4/conf/*/proxy_arp; do echo 0 > $i; done
  for i in /proc/sys/net/ipv4/conf/*/secure_redirects; do echo 1 > $i; done
  for i in /proc/sys/net/ipv4/conf/*/bootp_relay; do echo 0 > $i; done
  
  # Настраиваем политики по умолчанию
  $IPT -P INPUT DROP   #политика по умолчанию для входящих - запрет
  $IPT -P OUTPUT ACCEPT
  $IPT -P FORWARD ACCEPT

  # удаляем все имеющиеся правила
  $IPT -F
  $IPT -t nat -F
  $IPT -t mangle -F

  $IPT -X
  $IPT -t nat -X
  $IPT -t mangle -X
  
  $IPT -Z
  $IPT -t nat -Z
  $IPT -t mangle -Z
  
  for interface in $FREEZONE
  do
    $IPT -A INPUT -i $interface -j ACCEPT
    $IPT -A OUTPUT -o $interface -j ACCEPT
  done #разрешаем активность на незащищаемых интерфейсах
  
  $IPT -A INPUT -m conntrack --ctstate INVALID -j DROP
  $IPT -A OUTPUT -m conntrack --ctstate INVALID -j DROP
  $IPT -A FORWARD -m conntrack --ctstate INVALID -j DROP
  
  $IPT -A INPUT -p tcp -m conntrack --ctstate NEW --tcp-flags ALL ALL -j DROP
  $IPT -A INPUT -p tcp -m conntrack --ctstate NEW --tcp-flags ALL NONE -j DROP
  $IPT -A INPUT -p tcp -m conntrack --ctstate NEW ! --syn -j DROP
  $IPT -A INPUT -m conntrack --ctstate NEW,INVALID -p tcp --tcp-flags SYN,ACK SYN,ACK -j REJECT --reject-with tcp-reset
  
  $IPT -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
  $IPT -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
  $IPT -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
  
  #блокируем некоторые айпи и страны
  for ip in $BLACKLIST_IP
  do
    $IPT -I INPUT -s $ip -j DROP
  done
  for range in $BLACKLIST_RANGES
  do
    $IPT -I INPUT -m iprange --src-range $range -j DROP
  done
  for countries in $BLACKLIST_COUNTRIES
  do
    $IPT -I INPUT -m geoip --src-cc $countries -j DROP
  done
  
  
  if [ $IS_RECENT -gt "0" ]
  then
    for ports in $TCP_PORTS_PARSED
    do
      $IPT -A INPUT -p tcp -m tcp -m multiport --dports $ports -m conntrack --ctstate NEW -m recent --set --name ddos_block_conn_tcp
      $IPT -A INPUT -p tcp -m tcp -m multiport --dports $ports -m conntrack --ctstate NEW -m recent --update --seconds $RECENT_SECONDS --hitcount $RECENT_HITCOUNT --name ddos_block_conn_tcp -j DROP
    done
    
    for ports in $UDP_PORTS_PARSED
    do
      $IPT -A INPUT -p udp -m udp -m multiport --dports $ports -m conntrack --ctstate NEW -m recent --set --name ddos_block_conn_udp
      $IPT -A INPUT -p udp -m udp -m multiport --dports $ports -m conntrack --ctstate NEW -m recent --update --seconds $RECENT_SECONDS --hitcount $RECENT_HITCOUNT --name ddos_block_conn_udp -j DROP
    done
    
    for range in $PRIV_RANGES
    do
      for ports in $TCP_PORTS_PRIV_PARSED
      do
        $IPT -A INPUT -p tcp -m tcp -m multiport --dports $ports -m iprange --src-range $range -m conntrack --ctstate NEW -m recent --set --name ddos_block_conn_tcp
        $IPT -A INPUT -p tcp -m tcp -m multiport --dports $ports -m iprange --src-range $range -m conntrack --ctstate NEW -m recent --update --seconds $RECENT_SECONDS --hitcount $RECENT_HITCOUNT --name ddos_block_conn_tcp -j DROP
      done
      
      for ports in $UDP_PORTS_PRIV_PARSED
      do
        $IPT -A INPUT -p udp -m udp -m multiport --dports $ports -m iprange --src-range $range -m conntrack --ctstate NEW -m recent --set --name ddos_block_conn_udp
        $IPT -A INPUT -p udp -m udp -m multiport --dports $ports -m iprange --src-range $range -m conntrack --ctstate NEW -m recent --update --seconds $RECENT_SECONDS --hitcount $RECENT_HITCOUNT --name ddos_block_conn_udp -j DROP
      done
    done
  fi #ограничение количества соединений за заданное время
  
  for interface in $PROTECTZONE
  do
    for ports in $TCP_PORTS_PARSED
    do
      if [ $IS_CONNLIMIT -gt "0" ]
      then
        $IPT -A INPUT -i $interface -p tcp -m multiport --dports $ports -m connlimit --connlimit-above $IS_CONNLIMIT --connlimit-mask $CONNLIMIT_MASK -j DROP
      fi
      $IPT -A INPUT -i $interface -p tcp -m multiport --dports $ports -m conntrack --ctstate NEW -m hashlimit --hashlimit-upto $HASHLIMIT_UPTO --hashlimit-burst $HASHLIMIT_BURST --hashlimit-mode $HASHLIMIT_MODE --hashlimit-htable-expire $HASHLIMIT_EXPIRE --hashlimit-name ddos_block_tcp -j ACCEPT
    done
    
    for ports in $UDP_PORTS_PARSED
    do
      if [ $IS_CONNLIMIT -gt "0" ]
      then
        $IPT -A INPUT -i $interface -p udp -m multiport --dports $ports -m connlimit --connlimit-above $IS_CONNLIMIT --connlimit-mask $CONNLIMIT_MASK -j DROP
      fi
      $IPT -A INPUT -i $interface -p udp -m multiport --dports $ports -m conntrack --ctstate NEW -m hashlimit --hashlimit-upto $HASHLIMIT_UPTO --hashlimit-burst $HASHLIMIT_BURST --hashlimit-mode $HASHLIMIT_MODE --hashlimit-htable-expire $HASHLIMIT_EXPIRE --hashlimit-name ddos_block_udp -j ACCEPT
    done
    
    for range in $PRIV_RANGES
    do
      for ports in $TCP_PORTS_PRIV_PARSED
      do
        if [ $IS_CONNLIMIT -gt "0" ]
        then
          $IPT -A INPUT -i $interface -p tcp -m multiport --dports $ports -m iprange --src-range $range -m connlimit --connlimit-above $IS_CONNLIMIT --connlimit-mask $CONNLIMIT_MASK -j DROP
        fi
        $IPT -A INPUT -i $interface -p tcp -m multiport --dports $ports -m iprange --src-range $range -m conntrack --ctstate NEW -m hashlimit --hashlimit-upto $HASHLIMIT_UPTO --hashlimit-burst $HASHLIMIT_BURST --hashlimit-mode $HASHLIMIT_MODE --hashlimit-htable-expire $HASHLIMIT_EXPIRE --hashlimit-name ddos_block_tcp -j ACCEPT
      done
      
      for ports in $UDP_PORTS_PRIV_PARSED
      do
        if [ $IS_CONNLIMIT -gt "0" ]
        then
          $IPT -A INPUT -i $interface -p udp -m multiport --dports $ports -m iprange --src-range $range -m connlimit --connlimit-above $IS_CONNLIMIT --connlimit-mask $CONNLIMIT_MASK -j DROP
        fi
        $IPT -A INPUT -i $interface -p udp -m multiport --dports $ports -m iprange --src-range $range -m conntrack --ctstate NEW -m hashlimit --hashlimit-upto $HASHLIMIT_UPTO --hashlimit-burst $HASHLIMIT_BURST --hashlimit-mode $HASHLIMIT_MODE --hashlimit-htable-expire $HASHLIMIT_EXPIRE --hashlimit-name ddos_block_udp -j ACCEPT
      done
    done
  done # открываем входящие порты на защищаемых интерфейсах
  
  if [ $IS_BROADCAST -eq "0" ]
  then
    echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
    $IPT -A INPUT -p udp -m pkttype --pkt-type broadcast -j DROP
  else
    echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
  fi #запрещаем broadcast пакеты
  
  if [ $IS_ICMP_ECHO -eq "0" ]
  then
    echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all
    #$IPT -A INPUT -p icmp --icmp-type echo-request -j DROP
    #$IPT -A INPUT -p icmp -j DROP
    #$IPT -A OUTPUT -p icmp -j ACCEPT
  else
    echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_all
  fi # запрещаем пинги
  
  
  for interface in $PROTECTZONE
  do
    $IPT -A INPUT -i $interface -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    $IPT -A OUTPUT -o $interface -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
    if [ $IS_GRE -gt "0" ]
    then
      $IPT -A INPUT -i $interface -p gre -j ACCEPT
      $IPT -A OUTPUT -o $interface -p gre -j ACCEPT
    fi
  done #разрешаем входящую активность уже установленных соединений и создание исходящих соединений на защищаемых интерфейсах

}



case $1 in
'list')
  $IPT -L -n -v -x
  ;;
  
'clean')
  $IPT -P INPUT ACCEPT
  $IPT -P OUTPUT ACCEPT
  $IPT -P FORWARD ACCEPT
  $IPT -F
  $IPT -L -n -v -x
  ;;
  
'help')
  echo "PhazaSoft antiddos v.$_VERSION"
  echo 'iptables_myrules [start|clean|list|help]'
  ;;
  
*)
  do_rules
  ;;
esac
